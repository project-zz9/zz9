{"version":3,"file":"static/js/947.84a8bf57.chunk.js","mappings":"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","sources":["../node_modules/ansi-regex/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/is-fullwidth-code-point/index.js","../node_modules/string-width/index.js","../node_modules/string-width/node_modules/emoji-regex/index.js","../node_modules/strip-ansi/index.js","../node_modules/style-to-object/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-gfm-footnote/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/* eslint-disable yoda */\n'use strict';\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports.default = isFullwidthCodePoint;\n","'use strict';\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["module","exports","onlyFirst","pattern","join","RegExp","undefined","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","isFullwidthCodePoint","codePoint","Number","isNaN","stripAnsi","require","emojiRegex","stringWidth","string","width","code","codePointAt","ansiRegex","parse","iterator","output","hasIterator","len","element","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","charCodeAt","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","max","limit","POSITIVE_INFINITY","size","markdownSpace","enter","prefix","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","test","String","fromCharCode","splice","list","remove","items","parameters","chunkStart","from","unshift","apply","classifyCharacter","combineExtensions","extensions","all","index","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","normalizeIdentifier","toLowerCase","toUpperCase","resolveAll","events","context","called","resolve","includes","stringifyPosition","point","VFileMessage","place","origin","parts","indexOf","message","stack","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","getPrototypeOf","Symbol","toStringTag","wrap","middleware","callback","fnExpectsCallback","done","exception","Promise","then","unified","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","settings","addPlugin","addList","addPreset","assign","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","children","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","u","props","visit","visitor","reverse","visitParents","parents","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","PropTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","p","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","character","findAndReplace","ignored","convert","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","association","track","options_","lineShift","move","shift","containerFlow","safeOptions","indexStack","tracker","handle","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","a","b","whole","gfmFootnoteToMarkdown","peek","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","castFactory","typeFactory","anyFactory","propsFactory","tests","subresult","grandparents","toResult"],"sourceRoot":""}